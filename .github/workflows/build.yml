name: YT-AT
on:
  schedule:
    - cron: '30 23 * * *'
  workflow_dispatch:
    inputs:
      VERSION:
        description: 'Leaving blank will be the latest version that revanced support builds. You can build the latest version of YouTube, but errors may occur. Example: 17.35.36'
        required: false
        default: 'Default'
      DEVICE:
        description: 'Seleziona dispositivo'
        required: false
        default: 'armeabi-v7a'
        type: choice
        options:
          - armeabi-v7a
          - arm64-v8a
          - x86
          - x86_64
      FEATURE:
        description: 'Disattiva la funzione, aggiungi spazi per distinguere ogni caratteristica'
        required: false
        default: 'enable-debugging premium-heading '
      ICONS:
        description: 'Icona e nome originali'
        required: false
        type: boolean
        default: false
      OPTIMIZATION:
        description: 'Velocit√† di caricamento video'
        required: false
        type: boolean
        default: true
      SHORTS:
        description: 'Mostra il pulsante shorts video'
        required: false
        type: boolean
        default: true
      ROUND:
        description: 'Pip rounded (root)'
        required: false
        type: boolean
        default: false
jobs:
  build1:
    name: 'NO ROOT...'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run code
        env:
          VERSION: ${{ inputs.VERSION }}
          DEVICE: ${{ inputs.DEVICE }}
          ICONS: ${{ inputs.ICONS }}
          OPTIMIZATION: ${{ inputs.OPTIMIZATION }}
          AMOLED: 'true'
          FEATURE: ${{ inputs.FEATURE }}
          ROUND: ${{ inputs.ROUND }}
          TYPE: 'true'
          SHORTS: ${{ inputs.SHORTS }}

        run: |
          # kakathic
          if [ -z "$VERSION" ];then
          SHORTS=true; TYPE=true; ROUND=true; FEATURE="always-autorepeat hide-autoplay-button"; AMOLED=true; ICONS=true; OPTIMIZATION=true; DEVICE='arm64-v8a'; VERSION='Default'
          fi
          . .github/install.sh
      - name: Upload File
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ github.token }}
          name: YT-AT
          tag_name: V${{ env.VS }}
          files: Up/*

  build2:
    name: 'ROOT...'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run code
        env:
          VERSION: ${{ inputs.VERSION }}
          DEVICE: ${{ inputs.DEVICE }}
          ICONS: ${{ inputs.ICONS }}
          OPTIMIZATION: ${{ inputs.OPTIMIZATION }}
          AMOLED: 'true'
          FEATURE: ${{ inputs.FEATURE }}
          ROUND: ${{ inputs.ROUND }}
          TYPE: 'false'
          SHORTS: ${{ inputs.SHORTS }}

        run: |
          # kakathic
          if [ -z "$VERSION" ];then
          SHORTS=true; TYPE=false; ROUND=true; FEATURE="always-autorepeat hide-autoplay-button"; AMOLED=true; ICONS=true; OPTIMIZATION=true; DEVICE='arm64-v8a'; VERSION='Default'
          fi
          . .github/install.sh
      - name: Upload json
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ github.token }}
          name: Update
          tag_name: Up
          files: Up*.json
          prerelease: true
      - name: Upload File
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ github.token }}
          name: YT-AT
          tag_name: V${{ env.VS }}
          files: Up/*

  build3:
    name: 'AMOLED NO ROOT...'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run code
        env:
          VERSION: ${{ inputs.VERSION }}
          DEVICE: ${{ inputs.DEVICE }}
          ICONS: ${{ inputs.ICONS }}
          OPTIMIZATION: ${{ inputs.OPTIMIZATION }}
          AMOLED: 'false'
          FEATURE: ${{ inputs.FEATURE }}
          ROUND: ${{ inputs.ROUND }}
          TYPE: 'true'
          SHORTS: ${{ inputs.SHORTS }}

        run: |
          # kakathic
          if [ -z "$VERSION" ];then
          SHORTS=true; TYPE=true; ROUND=true; FEATURE="always-autorepeat hide-autoplay-button"; AMOLED=false; ICONS=true; OPTIMIZATION=true; DEVICE='arm64-v8a'; VERSION='Default'
          fi
          . .github/install.sh
      - name: Upload File
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ github.token }}
          name: YT-AT
          tag_name: V${{ env.VS }}
          files: Up/*

  build4:
    name: 'AMOLED ROOT...'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run code
        env:
          VERSION: ${{ inputs.VERSION }}
          DEVICE: ${{ inputs.DEVICE }}
          ICONS: ${{ inputs.ICONS }}
          OPTIMIZATION: ${{ inputs.OPTIMIZATION }}
          AMOLED: 'false'
          FEATURE: ${{ inputs.FEATURE }}
          ROUND: ${{ inputs.ROUND }}
          TYPE: 'false'
          SHORTS: ${{ inputs.SHORTS }}

        run: |
          # kakathic
          if [ -z "$VERSION" ];then
          SHORTS=true; TYPE=false; ROUND=true; FEATURE="always-autorepeat hide-autoplay-button"; AMOLED=false; ICONS=true; OPTIMIZATION=true; DEVICE='arm64-v8a'; VERSION='Default'
          fi
          . .github/install.sh
      - name: Upload json
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ github.token }}
          name: Update
          tag_name: Up
          files: Up*.json
          prerelease: true
      - name: Upload File
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ github.token }}
          name: YT-AT
          tag_name: V${{ env.VS }}
          files: Up/*
  build5:
    name: 'Complete'
    runs-on: ubuntu-22.04
    needs:
      - build1
      - build2
      - build3
      - build4
    steps:
      - uses: actions/checkout@v3
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 0
